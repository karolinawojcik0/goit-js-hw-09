{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAEMC,EAAaC,SAASC,cAAc,gBACpCC,EAAYF,SAASC,cAAc,eACnCE,EAAcH,SAASC,cAAc,mBAC5BD,SAASC,cAAc,mBACzBD,SAASC,cAAc,SAE/BG,iBAAiB,UAAU,SAAAC,G,kBAO5B,IAqBmBC,EAAUC,EArBvBC,EAAeC,GAAcC,EAAI,GAAKC,GAqBzBL,EAnBLI,EAmBeH,EAnBZC,EAoBZ,IAAII,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEP,WAAUC,UAEpBO,EAAO,CAAER,WAAUC,S,GAEpBA,E,KA3BAW,MAAK,SAAAC,GAAWA,EAARb,SAAea,EAALZ,MACjBa,EAAAvB,GAASwB,OAAOC,QACd,uBAAiCC,OAARb,EAAE,QAAmBa,OAAbf,EAAa,OAEhDgB,QAAQC,IAAI,uBAAiCF,OAARb,EAAE,QAAmBa,OAAbf,EAAa,M,IAE3DkB,OAAM,SAAAP,GAAWA,EAARb,SAAea,EAALZ,MAClBa,EAAAvB,GAASwB,OAAOM,QACd,sBAAgCJ,OAARb,EAAE,QAAmBa,OAAbf,EAAa,OAE/CgB,QAAQC,IAAI,sBAA8BF,OAARb,EAAE,QAAmBa,OAAbf,EAAa,M,KAnB7DH,EAAEuB,iBAKF,IAJA,IAAMC,EAASC,OAAO3B,EAAY4B,OAC5BtB,EAAaqB,OAAO/B,EAAWgC,OAC/BpB,EAAOmB,OAAO5B,EAAU6B,OAErBC,EAAI,EAAGA,GAAKH,EAAQG,IAAGC,EAAAD,GAiBhC7B,EAAY4B,MAAQ,KACpBhC,EAAWgC,MAAQ,KACnB7B,EAAU6B,MAAQ,I","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst firstDelay = document.querySelector('[name=delay]');\nconst delayStep = document.querySelector('[name=step]');\nconst amountInput = document.querySelector('[name=\"amount\"]');\nconst button = document.querySelector('[type=\"submit\"]');\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', e => {\n  e.preventDefault();\n  const amount = Number(amountInput.value);\n  const startDelay = Number(firstDelay.value);\n  const step = Number(delayStep.value);\n\n  for (let i = 1; i <= amount; i++) {\n    const currentDelay = startDelay + (i - 1) * step;\n\n    createPromise(i, currentDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${i} in ${currentDelay}ms`\n        );\n        console.log(`✅ Fulfilled promise ${i} in ${currentDelay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${i} in ${currentDelay}ms`\n        );\n        console.log(`❌ Rejected promise ${i} in ${currentDelay}ms`);\n      });\n  }\n  amountInput.value = null;\n  firstDelay.value = null;\n  delayStep.value = null;\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}"],"names":["$ejkSG","parcelRequire","$ce04d3a99e08e73b$var$firstDelay","document","querySelector","$ce04d3a99e08e73b$var$delayStep","$ce04d3a99e08e73b$var$amountInput","addEventListener","e","position","delay","currentDelay","startDelay","i","step","Promise","resolve","reject","setTimeout","Math","random","then","param","$parcel$interopDefault","Notify","success","concat","console","log","catch","failure","preventDefault","amount","Number","value","i1","_loop"],"version":3,"file":"03-promises.ef2e5f5a.js.map"}
{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAAaC,SAASC,cAAc,gBACpCC,EAAYF,SAASC,cAAc,eACnCE,EAAcH,SAASC,cAAc,mBAC5BD,SAASC,cAAc,mBA+BtC,SAASG,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,E,MAAUC,IAEpBG,EAAO,C,SAAEJ,E,MAAUC,GAAQ,GAE5BA,EAAM,G,CAvCAN,SAASC,cAAc,SAE/BY,iBAAiB,UAAUC,IAC9BA,EAAEC,iBACF,MAAMC,EAASC,OAAOd,EAAYe,OAC5BC,EAAaF,OAAOlB,EAAWmB,OAC/BE,EAAOH,OAAOf,EAAUgB,OAE9B,IAAK,IAAIG,EAAI,EAAGA,GAAKL,EAAQK,IAAK,CAChC,MAAMC,EAAeH,GAAcE,EAAI,GAAKD,EAE5ChB,EAAciB,EAAGC,GACdC,MAAK,EAAClB,SAAEA,EAAQC,MAAEA,MACjBkB,EAAA3B,GAAS4B,OAAOC,QACd,uBAAqBL,QAAUC,OAEjCK,QAAQC,IAAI,uBAAqBP,QAAUC,MAAiB,IAE7DO,OAAM,EAACxB,SAAEA,EAAQC,MAAEA,MAClBkB,EAAA3B,GAAS4B,OAAOK,QACd,sBAAoBT,QAAUC,OAEhCK,QAAQC,IAAI,sBAAoBP,QAAQC,MAAiB,G,CAG/DnB,EAAYe,MAAQ,KACpBnB,EAAWmB,MAAQ,KACnBhB,EAAUgB,MAAQ,IAAI","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst firstDelay = document.querySelector('[name=delay]');\nconst delayStep = document.querySelector('[name=step]');\nconst amountInput = document.querySelector('[name=\"amount\"]');\nconst button = document.querySelector('[type=\"submit\"]');\nconst form = document.querySelector('.form');\n\nform.addEventListener('submit', e => {\n  e.preventDefault();\n  const amount = Number(amountInput.value);\n  const startDelay = Number(firstDelay.value);\n  const step = Number(delayStep.value);\n\n  for (let i = 1; i <= amount; i++) {\n    const currentDelay = startDelay + (i - 1) * step;\n\n    createPromise(i, currentDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${i} in ${currentDelay}ms`\n        );\n        console.log(`✅ Fulfilled promise ${i} in ${currentDelay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${i} in ${currentDelay}ms`\n        );\n        console.log(`❌ Rejected promise ${i} in ${currentDelay}ms`);\n      });\n  }\n  amountInput.value = null;\n  firstDelay.value = null;\n  delayStep.value = null;\n});\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}"],"names":["$1GAPJ","parcelRequire","$47d4ff9957288465$var$firstDelay","document","querySelector","$47d4ff9957288465$var$delayStep","$47d4ff9957288465$var$amountInput","$47d4ff9957288465$var$createPromise","position","delay","Promise","resolve","reject","setTimeout","Math","random","addEventListener","e","preventDefault","amount","Number","value","startDelay","step","i","currentDelay","then","$parcel$interopDefault","Notify","success","console","log","catch","failure"],"version":3,"file":"03-promises.78eb618e.js.map"}